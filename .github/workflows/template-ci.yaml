# ATLZ prod / reusable workflow / terraform validate & plan
# https://docs.github.com/en/actions/using-workflows/reusing-workflows

on:
  workflow_call:
    inputs:
      gh_workflow:
        required: true
        type: string

jobs:
  validate:
    name: Validate Terraform
    runs-on: ubuntu-latest
    environment: atlz-platform-dev
    defaults:
      run:
        working-directory: ${{ inputs.gh_workflow }}
    env: ### Azure Workload Identity Federation Setup needed
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      #ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_USE_AZUREAD: true
      ARM_USE_OIDC: true

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.0" ## Better to have this configured in TF modules
          terraform_wrapper: false

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - uses: terraform-linters/setup-tflint@v4
        name: Setup TFLint
        with:
          tflint_wrapper: true

      - name: Show TFLint version
        run: tflint --version

      - name: Init TFLint
        run: tflint --init

      - name: Run TFLint
        id: tflint
        run: tflint
        continue-on-error: false

      - name: Run terraform plan
        id: plan
        run: terraform plan -out=tfplan.out -no-color
        continue-on-error: false

      - name: Run terraform show # because of limited char count in github comments
        id: show
        run: terraform show tfplan.out -no-color

      - name: Save tfplan.out artifact
        id: save-artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.pull_request.number }}-tf-plan
          path: ${{ inputs.gh_workflow }}/tfplan.out
