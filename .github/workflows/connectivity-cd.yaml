name: '02-Connectivity-CD'

on:
  push:
    branches: [ "main" ]
    paths:
      - 'connectivity/**'
  workflow_dispatch:
    inputs:
      terraform_action:
        description: "Terraform Action to Perform"
        required: true
        default: "apply"
        type: choice
        options:
          - "apply"
          - "destroy"

permissions:
  contents: read

jobs:
  plan:
    name: Plan with Terraform
    runs-on: ubuntu-latest
    #concurrency: dev-tfstate
    environment: atlz-dev-plan
    defaults:
      run:
        shell: bash
        working-directory: './connectivity'
    permissions:
      #id-token: write
      contents: read
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_CONNECTIVITY_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_USE_AZUREAD: true
      ARM_USE_OIDC: true

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan for ${{ inputs.terraform_action == 'destroy' && 'Destroy' || 'Apply' }}
        run: |
          # shellcheck disable=SC2086
          terraform plan -out=tfplan -input=false ${{ inputs.terraform_action == 'destroy' && '-destroy' || '' }}

      - name: Create Module Artifact
        run: |
          $stagingDirectory = "staging"
          New-Item -Path . -Name $stagingDirectory -ItemType "directory"
          Copy-Item -Path "./*" -Exclude @(".git", ".terraform", ".github",  $stagingDirectory) -Recurse -Destination "./$stagingDirectory"

        shell: pwsh

      - name: Publish Module Artifact
        uses: actions/upload-artifact@v4
        with:
          name: module
          path: ./connectivity/
          #path: ./connectivity/staging/

      - name: Env Check
        run: pwd && ls

      - name: Show the Plan for Review
        run: terraform show tfplan

  apply:
    needs: plan
    name: Apply with Terraform
    runs-on: ubuntu-latest
    #concurrency: dev-tfstate
    environment: atlz-dev-apply
    #defaults:
    #  run:
    #    shell: bash
    #    working-directory: 'connectivity'
    permissions:
      #id-token: write
      contents: read
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_CONNECTIVITY_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_USE_AZUREAD: true
      ARM_USE_OIDC: true


    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: module

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Env Check
        run: pwd && ls

      - name: Terraform Init
        run: terraform init

      - name: Terraform ${{ inputs.terraform_action == 'destroy' && 'Destroy' || 'Apply' }}
        run: terraform apply -input=false -auto-approve tfplan
